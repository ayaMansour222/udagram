version: 2.1
orbs:
  node: circleci/node@4.1.0       #install Node.js and its package managers (npm, yarn) as my runtime environment.
  aws-cli: circleci/aws-cli@1.3.1 #Install and configure the AWS command-line interface with CircleCI.
  eb: circleci/aws-elastic-beanstalk@2.0.1 #Deploy and scale the application and its services via AWS Elastic Beanstalk with CircleCI. 

jobs:
  build:
    docker: #specify docker as an executer of build job and its image.
      - image: "cimg/base:stable"
    steps:
      - node/install: #install Node.js version "16.13.2".
        node-version: "16.13.2"
      - checkout  #check the source code uploaded to Githup.
      - aws-cli/setup #setup AWS command-line interface.
      - eb/setup  #setup AWS Elastic Beanstalk with CircleCI.
      - run:  #run script that is responible for installing  packages in dependecies part in package.json of udagram-frontend app.
          name: Front-End Install
          command: |
            npm run udagram-frontend:install
      - run:  #run script that is responible for installing  packages in dependecies part in package.json of udagram-api app.
          name: Back-End Install
          command: |
            npm run udagram-api:install
      - run:  #run script that is responible for building  udagram-frontend static files to www folder.
          name: Front-End Build
          command: |
            npm run udagram-frontend:build
      - run:  #run script that is responible for building  udagram-api to  www folder and zip files to Archive.zip .
          name: Back-End Build
          command: |
            npm run udagram-api:build
      - run:  #run script that is responible for testing  udagram-api app.
          name: Back-End Test
          command:  |
            npm run udagram-api:test
      - run:   #run script that is responible for testing  udagram-frontend app.
          name: Front-End Test
          command:  |
            npm run udagram-frontend:test
      - run:  #run script in udagram-api/bin/deploy.sh that is responible for deploy Archive.zip to Elastic Beanstalk environment that is previously created  
          name: Deploy App API
          command: |
            npm run udagram-api:deploy 
      - run:  #run script in udagram-frontend/bin/deploy.sh that is responible for deploy static files in www folder to AWS S3 bucket that is previously created  .
          name: Deploy App Front
          command: |
            npm run udagram-frontend:deploy